Starting audit...
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\communication\SearchCheapestDistributor.java:9:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\communication\SearchCheapestDistributor.java:10:40: Name 'playerFactory' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\communication\SearchProducer.java:3:8: Unused import - data.PlayerType. [UnusedImports]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\communication\SearchProducer.java:12:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\communication\SearchProducer.java:13:48: Name 'factory' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\communication\SearchProducer.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\communication\SignContract.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\communication\Writer.java:54:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'getProducerList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'getProducerList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\communication\Writer.java:58:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'setProducerList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'setProducerList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\Calculations.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\DistributorContract.java:6:7: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\DistributorOutput.java:84:5: Class 'DistributorOutput' looks like designed for extension (can be subclassed), but the method 'getProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorOutput' final or making the method 'getProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\DistributorOutput.java:88:5: Class 'DistributorOutput' looks like designed for extension (can be subclassed), but the method 'setProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorOutput' final or making the method 'setProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\Player.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\PlayerFactory.java:6:1: Class PlayerFactory should be declared as final. [FinalClass]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\PlayerFactory.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\PlayerFactory.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:16: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:25:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:29:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:33:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:37:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:41:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:45:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:49:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:53:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:57:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:61:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:65:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\data\ProducerOutput.java:69:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\Main.java:18:34: Variable 'producerList' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\Main.java:45: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Distributor.java:30:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getCurrentProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getCurrentProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Distributor.java:34:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setCurrentProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setCurrentProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Distributor.java:38:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getEnergyNeededKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getEnergyNeededKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Distributor.java:42:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setEnergyNeededKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setEnergyNeededKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Distributor.java:46:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'getProducerStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'getProducerStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Distributor.java:50:5: Class 'Distributor' looks like designed for extension (can be subclassed), but the method 'setProducerStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Distributor' final or making the method 'setProducerStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\DistributorChange.java:7:5: Class 'DistributorChange' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorChange' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\DistributorChange.java:11:5: Class 'DistributorChange' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorChange' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\DistributorChange.java:15:5: Class 'DistributorChange' looks like designed for extension (can be subclassed), but the method 'getInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorChange' final or making the method 'getInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\DistributorChange.java:19:5: Class 'DistributorChange' looks like designed for extension (can be subclassed), but the method 'setInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DistributorChange' final or making the method 'setInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\InitialData.java:10:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'getProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'getProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\InitialData.java:14:5: Class 'InitialData' looks like designed for extension (can be subclassed), but the method 'setProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialData' final or making the method 'setProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\MonthlyUpdate.java:11:5: Class 'MonthlyUpdate' looks like designed for extension (can be subclassed), but the method 'getDistributorChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdate' final or making the method 'getDistributorChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\MonthlyUpdate.java:15:5: Class 'MonthlyUpdate' looks like designed for extension (can be subclassed), but the method 'setDistributorChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdate' final or making the method 'setDistributorChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\MonthlyUpdate.java:19:5: Class 'MonthlyUpdate' looks like designed for extension (can be subclassed), but the method 'getProducerChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdate' final or making the method 'getProducerChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\MonthlyUpdate.java:23:5: Class 'MonthlyUpdate' looks like designed for extension (can be subclassed), but the method 'setProducerChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdate' final or making the method 'setProducerChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:18:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getCurrentDistributorList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getCurrentDistributorList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:22:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setCurrentDistributorList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setCurrentDistributorList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:26:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getCurrentDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getCurrentDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:30:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setCurrentDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setCurrentDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:34:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:38:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:42:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:46:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:50:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:54:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:58:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:62:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:66:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:70:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:74:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\Producer.java:78:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\ProducerChange.java:7:5: Class 'ProducerChange' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerChange' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\ProducerChange.java:11:5: Class 'ProducerChange' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerChange' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\ProducerChange.java:15:5: Class 'ProducerChange' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerChange' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\storage\ProducerChange.java:19:5: Class 'ProducerChange' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerChange' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\EnergyChoiceStrategyType.java:10:25: Variable 'label' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\EnergyStrategy.java:8:20: Name 'producerList' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\EnergyStrategy.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\EnergyStrategy.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\EnergyStrategy.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\EnergyStrategyFactory.java:7: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\EnergyStrategyFactory.java:7:5: Class 'EnergyStrategyFactory' looks like designed for extension (can be subclassed), but the method 'createStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EnergyStrategyFactory' final or making the method 'createStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\EnergyStrategyFactory.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\GreenStrategy.java:10:17: Variable 'distributor' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\GreenStrategy.java:16:5: Class 'GreenStrategy' looks like designed for extension (can be subclassed), but the method 'printSal' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GreenStrategy' final or making the method 'printSal' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\GreenStrategy.java:21:5: Class 'GreenStrategy' looks like designed for extension (can be subclassed), but the method 'getProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GreenStrategy' final or making the method 'getProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\GreenStrategy.java:32:5: Class 'GreenStrategy' looks like designed for extension (can be subclassed), but the method 'searchCheapestProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GreenStrategy' final or making the method 'searchCheapestProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\PriceStrategy.java:8:53: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\PriceStrategy.java:9:17: Variable 'distributor' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\PriceStrategy.java:15:5: Class 'PriceStrategy' looks like designed for extension (can be subclassed), but the method 'printSal' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PriceStrategy' final or making the method 'printSal' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\PriceStrategy.java:22:11: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\PriceStrategy.java:26:5: Class 'PriceStrategy' looks like designed for extension (can be subclassed), but the method 'searchCheapestProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PriceStrategy' final or making the method 'searchCheapestProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\QuantityStrategy.java:8:56: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\QuantityStrategy.java:9:17: Variable 'distributor' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\QuantityStrategy.java:15:5: Class 'QuantityStrategy' looks like designed for extension (can be subclassed), but the method 'printSal' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'QuantityStrategy' final or making the method 'printSal' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\QuantityStrategy.java:22:11: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\strategies\QuantityStrategy.java:26:5: Class 'QuantityStrategy' looks like designed for extension (can be subclassed), but the method 'searchCheapestProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'QuantityStrategy' final or making the method 'searchCheapestProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\personal\facultate\an2\sem1\POO\Teme\POO_Tema2_Etapa2\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
Audit done.
Checkstyle ends with 91 errors.
